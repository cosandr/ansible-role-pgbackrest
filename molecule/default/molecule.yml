---

dependency:
  name: galaxy
  options:
    requirements-file: requirements.yml
driver:
  name: docker
platforms:
  - name: "backup_ol${MOLECULE_OL_VERSION:-8}"
    image: "oraclelinux:${MOLECULE_OL_VERSION:-8}"
    command: /sbin/init
    tmpfs:
      - /run
      - /tmp
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true
    pre_build_image: true
    groups: ["backup"]

  - name: "stby_ol${MOLECULE_OL_VERSION:-8}"
    image: "oraclelinux:${MOLECULE_OL_VERSION:-8}"
    command: /sbin/init
    tmpfs:
      - /run
      - /tmp
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true
    pre_build_image: true
    groups: ["standby"]
provisioner:
  name: ansible
  inventory:
    group_vars:
      all:
        postgresql_version: ${MOLECULE_PG_VERSION:-"13"}
      backup:
        pgbackrest_stanzas:
          - stanza: main
            pg_path: "/var/lib/pgsql/{{ postgresql_version }}/data"
            schedules:
              - backup_type: full
                oncalendar: 'Weekly'
              - backup_type: diff
                oncalendar: 'Hourly'
          - stanza: test
            pg_path: "/var/lib/pgsql/{{ postgresql_version }}/data"
      standby:
        pgbackrest_stanzas:
          - stanza: main
            pg_path: "/var/lib/pgsql/{{ postgresql_version }}/data"
            extra: "recovery-option=primary_conninfo=host=172.17.0.5 port=5432 user=replicator"
        pgbackrest_standby: true
verifier:
  name: ansible
lint: |
  set -e
  yamllint .
  ansible-lint .
